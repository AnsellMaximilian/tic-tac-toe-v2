{"version":3,"sources":["styles/start-page.module.css","styles/board.module.css","styles/game-over.module.css","components/StartPage.tsx","images/crack.jpg","components/Board.tsx","components/GameOver.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","StartPage","props","useState","playerOneName","setPlayerOneName","playerTwoName","setPlayerTwoName","switchTile","setPlayerOne","player","tile","setPlayerTwo","className","styles","start","info","info__header","info__author","href","options","options__left","options__right","names","onClick","playerOne","switch","type","name","placeholder","value","onChange","e","target","playerTwo","setIsGameOn","Board","playerOnTurn","setPlayerOnTurn","winningCombos","setTile","index","setTiles","tiles","newTiles","map","tileIdx","finished","forEach","combo","win","console","log","setWinner","setWinCombo","setScore","every","setDraw","Array","fill","n","i","checkWin","container","back","backToMenu","board","winner","alert","style","winCombo","includes","backgroundImage","crack","scores","score","GameOver","ann","again","reset","App","isGameOn","draw","gameOver","setGameOver","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9df256d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"start\":\"start-page_start__1Yvok\",\"info\":\"start-page_info__2kY7L\",\"info__header\":\"start-page_info__header__1TT1Q\",\"info__author\":\"start-page_info__author__2WlKt\",\"options\":\"start-page_options__rhyle\",\"options__right\":\"start-page_options__right___T92Q\",\"start-btn\":\"start-page_start-btn__wT8EI\",\"name-input\":\"start-page_name-input__3cEXg\",\"tile\":\"start-page_tile__3WS6L\",\"switch\":\"start-page_switch__3BBtE\",\"options__left\":\"start-page_options__left__3wjWf\",\"radios\":\"start-page_radios__99l3s\",\"mode__option\":\"start-page_mode__option__5-Ys8\",\"radio\":\"start-page_radio__3O9MM\",\"radio__box\":\"start-page_radio__box__1bv2-\",\"radio-on\":\"start-page_radio-on__4oL6H\",\"mode-instruction\":\"start-page_mode-instruction__WCNGx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"board_container__2ij7U\",\"board\":\"board_board__NA3qg\",\"tile\":\"board_tile__3XGeA\",\"tile-value\":\"board_tile-value__1Lv6F\",\"scores\":\"board_scores__3DnyE\",\"score\":\"board_score__3Hpru\",\"back\":\"board_back__6tJWI\",\"on-turn\":\"board_on-turn__3Y9Hp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game-over\":\"game-over_game-over__QMCqB\",\"appear\":\"game-over_appear__26XQv\",\"again\":\"game-over_again__Jm6bZ\"};","import React, {useState} from 'react';\r\n\r\nimport styles from '../styles/start-page.module.css';\r\n\r\nimport {Player} from '../types/types';\r\n\r\ntype Props = Readonly<{\r\n    setPlayerOne: Function,\r\n    setPlayerTwo: Function,\r\n    setIsGameOn: Function,\r\n    playerOne: Player,\r\n    playerTwo: Player\r\n}>\r\n\r\nexport default function StartPage(props: Props): React.ReactElement<Props>{\r\n\r\n    const [playerOneName, setPlayerOneName] = useState('');\r\n    const [playerTwoName, setPlayerTwoName] = useState('');\r\n\r\n    const start = (): void => {\r\n        props.setPlayerOne((player: Player) => ({...player, name: playerOneName || player.name}));\r\n        props.setPlayerTwo((player: Player) => ({...player, name: playerTwoName || player.name}));\r\n        props.setIsGameOn(true);\r\n    }\r\n\r\n    const switchTile = () => {\r\n        props.setPlayerOne((player: Player) => {\r\n            return {\r\n                ...player,\r\n                tile: player.tile === 'x' ? 'o' : 'x'\r\n            }\r\n        })\r\n        props.setPlayerTwo((player: Player) => {\r\n            return {\r\n                ...player,\r\n                tile: player.tile === 'x' ? 'o' : 'x'\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={styles.start}>\r\n            <div className={styles.info}>\r\n                <div className={styles.info__header}>\r\n                    <h1>TIC TAC TOE</h1>\r\n                </div>\r\n                <div className={styles.info__author}>\r\n                    <div>\r\n                        Designed and Coded by <a href=\"https://github.com/AnsellMaximilian\">Ansell Maximilian</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={styles.options}>\r\n                <div className={styles.options__left}>\r\n                    <div>\r\n                        Source can be found on <a href=\"https://github.com/AnsellMaximilian/tic-tac-toe-v2\">Github</a>\r\n                    </div>\r\n                    {/* <div className={styles['mode-instruction']}>\r\n                        CHOOSE MODE\r\n                    </div>\r\n                    <div className={styles.radios}>\r\n                        <div className={styles.mode__option}>\r\n                            <div className={`${styles.radio} ${props.mode === 'pvc' && styles['radio-on']}`} \r\n                                onClick={() => props.setMode('pvc')}\r\n                            >\r\n                                <div className={`${styles.radio__box}`}></div>\r\n                                Computer vs. Player\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.mode__option}>\r\n                            <div className={`${styles.radio} ${props.mode === 'pvp' && styles['radio-on']}`} \r\n                                onClick={() => props.setMode('pvp')}\r\n                            > \r\n                                <div className={`${styles.radio__box}`}></div>\r\n                                Player vs. Player\r\n                            </div>\r\n                        </div>\r\n                    </div> */}\r\n                </div>\r\n                <div className={styles.options__right}>\r\n                    <div className={styles.names}>\r\n                        <div className={styles['name-input']}>\r\n                            <div className={styles.tile} onClick={switchTile}>\r\n                                {props.playerOne.tile}\r\n                                <div className={`${styles.switch} ${styles['switch-left']}`}></div>\r\n                            </div>\r\n                            <input \r\n                                type=\"text\" \r\n                                name=\"playerOne\" \r\n                                placeholder=\"Player 1 name\"\r\n                                value={playerOneName}\r\n                                onChange={(e) => setPlayerOneName(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className={styles['name-input']}>\r\n                            <div className={styles.tile} onClick={switchTile}>\r\n                                {props.playerTwo.tile}\r\n                                <div className={`${styles.switch} ${styles['switch-right']}`}></div>\r\n                            </div>\r\n                            <input \r\n                                type=\"text\" \r\n                                name=\"playerOne\" \r\n                                placeholder=\"Player 2 name\"\r\n                                value={playerTwoName}\r\n                                onChange={(e) => setPlayerTwoName(e.target.value)}\r\n                            />\r\n                        </div> \r\n\r\n                    </div>\r\n                    <div className={styles['start-btn']}>\r\n                        <button onClick={start}>START</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/crack.7985eab3.jpg\";","import React, {useState} from 'react'\r\n\r\nimport {Player, TileArray} from '../types/types';\r\n\r\nimport crack from '../images/crack.jpg';\r\n\r\nimport styles from '../styles/board.module.css';\r\n\r\ntype Props = {\r\n    playerOne: Player,\r\n    playerTwo: Player,\r\n    tiles: TileArray,\r\n    setTiles: Function,\r\n    setWinner: Function,\r\n    setWinCombo: Function,\r\n    backToMenu: Function\r\n    setDraw: Function\r\n    winCombo: Array<number>,\r\n    draw: boolean,\r\n    winner: Player | null,\r\n    setScore: Function\r\n    \r\n}\r\n\r\nexport default function Board(props: Props): React.ReactElement {\r\n\r\n    const [playerOnTurn, setPlayerOnTurn] = useState<Player>(props.playerOne);\r\n\r\n    const winningCombos = [ [3, 4, 5], [0, 1, 2], [6, 7, 8], // Horizontal\r\n      [0, 3, 6], [1, 4, 7], [2, 5, 8], // Vertical\r\n      [0, 4, 8], [2, 4, 6] // Diagonal\r\n    ];\r\n  \r\n    const checkWin = (tiles: TileArray) => {\r\n        let finished = false;\r\n        winningCombos.forEach(combo => {\r\n            let win = true;\r\n            combo.forEach(tile => {\r\n                if(tiles[tile] !== playerOnTurn.tile) win = false;\r\n            })\r\n            \r\n            if(win){\r\n                console.log('fag')\r\n                props.setWinner(playerOnTurn);\r\n                props.setWinCombo(combo);\r\n                props.setScore(playerOnTurn);\r\n                finished = true;\r\n            }else if(tiles.every(tile => tile) && !finished){\r\n                props.setDraw(true);\r\n                props.setWinCombo(new Array(9).fill(1).map((n, i) => i));\r\n            }\r\n        })\r\n    }\r\n\r\n    const setTile = (index: number) => {\r\n        props.setTiles((tiles: TileArray): TileArray => {\r\n            const newTiles = tiles.map((tile, tileIdx) => {\r\n                if(tileIdx === index){\r\n                    return playerOnTurn.tile;\r\n                }\r\n                return tile;\r\n            })\r\n            checkWin(newTiles);\r\n\r\n            return newTiles;\r\n        })\r\n        setPlayerOnTurn((player: Player) => {\r\n            if(player === props.playerOne){\r\n                return props.playerTwo;\r\n               \r\n            }else {\r\n                return props.playerOne;\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={styles.back} onClick={(e) => props.backToMenu()}>Go Back</div>\r\n            <div className={styles.board}>\r\n                {\r\n                    props.tiles.map((tile, index) => {\r\n                        return (\r\n                            <div className={styles.tile} key={index} \r\n                                onClick={tile || props.winner ? () => alert('NOPE') : () => {\r\n                                    setTile(index);\r\n                                }}\r\n                                style={props.winCombo.includes(index) ? {backgroundImage: `url(${crack})`} : {}}\r\n                            >\r\n                                <div className={styles['tile-value']}>\r\n                                    {tile || \" \"}\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <div className={styles.scores}>\r\n                <div className={`${styles.score} ${playerOnTurn === props.playerOne && styles['on-turn']}`}>\r\n                    <div>\r\n                        {`${props.playerOne.name} (${props.playerOne.tile})`}\r\n                    </div>\r\n                    <div>\r\n                        {props.playerOne.score}\r\n                    </div>\r\n                </div>\r\n                <div className={`${styles.score} ${playerOnTurn === props.playerTwo && styles['on-turn']}`}>\r\n                    <div>\r\n                        {`${props.playerTwo.name} (${props.playerTwo.tile})`}\r\n                    </div>\r\n                    <div>\r\n                        {props.playerTwo.score}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport {Player} from '../types/types';\r\n\r\nimport styles from '../styles/game-over.module.css';\r\n\r\ntype Props = {\r\n    winner: Player | null,\r\n    draw: boolean\r\n    reset: Function\r\n}\r\n\r\nexport default function GameOver(props: Props): React.ReactElement {\r\n    return (\r\n        <div className={styles['game-over']}>\r\n            <div className={styles.ann}>\r\n                {props.winner ?\r\n                <div>\r\n                    <div>Winner<div>\r\n                    </div>{props.winner.name}</div>\r\n                </div>\r\n                :\r\n                <div>Draw</div>\r\n                }\r\n            </div>\r\n            <div className={styles.again} onClick={() => props.reset()}>Play Again</div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\nimport './App.css';\n\n// Components\nimport StartPage from './components/StartPage';\nimport Board from './components/Board';\nimport GameOver from './components/GameOver';\n\n// Types\nimport { Player, TileArray } from './types/types';\n\nfunction App() {\n\n  const [playerOne, setPlayerOne] = useState<Player>({name: 'Player One', score: 0, tile: 'x'});\n  const [playerTwo, setPlayerTwo] = useState<Player>({name: 'Player Two', score: 0, tile: 'o'});\n  const [isGameOn, setIsGameOn] = useState<boolean>(false);\n  const [tiles, setTiles] = useState<TileArray>(new Array(9).fill(null));\n  const [winner, setWinner] = useState<Player | null>(null);\n  const [winCombo, setWinCombo] = useState<Array<number>>([])\n  const [draw, setDraw] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n\n  const setScore = (player: Player) => {\n    if(player === playerOne){\n      setPlayerOne((player: Player) => ({...player, score: player.score + 1}))\n    }else{\n      setPlayerTwo((player: Player) => ({...player, score: player.score + 1}))\n    }\n    \n  }\n \n  const backToMenu = () => {\n    reset();\n    setIsGameOn(false);\n    setPlayerOne({name: 'Player One', score: 0, tile: 'x'});\n    setPlayerTwo({name: 'Player Two', score: 0, tile: 'o'})\n\n  }\n\n  const reset = () => {\n    setWinner(null);\n    setWinCombo([]);\n    setTiles(new Array(9).fill(null));\n    setDraw(false);\n    setGameOver(false);\n  }\n\n  if(draw || winner ) setTimeout(() => {\n    setGameOver(true);\n  }, 500);\n\n  return (\n    <div className=\"App\">\n     {\n       isGameOn ?\n       <Board \n        backToMenu={backToMenu}\n        playerOne={playerOne}\n        playerTwo={playerTwo}\n        tiles={tiles}\n        setTiles={setTiles}\n        setWinner={setWinner}\n        setWinCombo={setWinCombo}\n        winCombo={winCombo}\n        setDraw={setDraw}\n        draw={draw}\n        winner={winner}\n        setScore={setScore}\n       />\n       :\n       <StartPage \n        playerOne={playerOne}\n        playerTwo={playerTwo}\n        setPlayerOne={setPlayerOne} \n        setPlayerTwo={setPlayerTwo}\n        setIsGameOn={setIsGameOn}\n      />\n     }\n     {gameOver? <GameOver  reset={reset} winner={winner} draw={draw}/> : null}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}